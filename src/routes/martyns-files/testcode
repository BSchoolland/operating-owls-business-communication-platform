
/*
useEffect(() => {
    // This code runs when the component mounts
    const initialMessages = fetchInitialMessages();
    setMessages(initialMessages);
  }, []); // The empty array means this effect runs once on mount

  const fetchInitialMessages = () => {
    // Fetch messages from an API or define some initial messages
    return [
      
    ];
    // If fetching from an API, you'd typically use async/await here:
    // async function fetchMessages() {
    //   const response = await fetch('your-api-endpoint/messages');
    //   const data = await response.json();
    //   setMessages(data);
    // }
    // fetchMessages();
  };

*/


/*
  
let previousMessageDate = null;
const messageList = messagesArray.map((message, index) => {
    const firstMessageBool = index === 0;
    let showDayBreak = true;
    let showUserInfo = true;

    const currentMessageDate = moment.tz(message.timestamp, timeZoneOptions.timeZone)
    const currentMessageFormattedDate = currentMessageDate.format('MM-DD-YYYY')
    if(!firstMessageBool){
    
        const areSameDay = currentMessageDate.isSame(previousMessageDate, 'day')

        if(areSameDay){
            showDayBreak = false;
        }

        const fiveMinBeforeCurrentMessage = currentMessageDate.subtract(5, 'minutes');
        const moreThanFiveMinSinceLastMessage = previousMessageDate.isBefore(fiveMinBeforeCurrentMessage);
        if (messagesArray[index-1].userId === message.userId && !moreThanFiveMinSinceLastMessage){
            showUserInfo = false;
        }
        
    }

    previousMessageDate = currentMessageDate;

    return (
      <div className="message-element" key={index} style={{ marginBottom: '10px' }}>
        {showDayBreak &&(
            <div> {currentMessageFormattedDate}</div>
        )}
        
        {showUserInfo && (
           <div style={{ display: 'flex', alignItems: 'start' }}>
            <img
              src={message.avatarUrl}
              alt={`${message.username}'s avatar`}
              style={{ width: '50px', height: '50px', borderRadius: '50%', marginRight: '10px' }}
            />
            <h3 style={{ margin: '0px', marginRight: '5px'}}>{message.username}</h3>
            <p style={{margin: '0px'}}>{currentMessageFormattedDate}</p>
            <p style={{margin: '0px'}}>Message ID: {message.messageId}</p>
                <div>{message.content}</div>
            </div>
             
          
        )}
        {!showUserInfo && <div style={{ marginLeft: '45px'}}>{message.content}</div>}
        
        
      </div>
    );
})
*/